require Proof Proof.cafe

--> ***************************
--> (4) init(S) implies inv(S).
--> (5) inv(S) implies inv(SS).
--> ***************************

module ProofInv {
  protecting(ProofBase)
  pred invK : State

  pred initinv : State
  eq initinv(S:State)
     = init(S) implies invK(S) .

  pred iinv : State State .
  eq iinv(S:State,SS:State)
     = inv(S) and invK(S) implies invK(SS) .
  pred invinv : State
  eq invinv(S:State)
     = not (S =(*,1)=>+ SS:State if CC:Bool suchThat
            not ((CC implies iinv(S,SS)) == true)
     	   { S => SS !! CC ! inv(S) ! invK(S) ! invK(SS) }) .

  -- Common lemmas in this domain.

