require Proof Proof.cafe
provide ProofContCont

--> *********************************************************************************
--> (2) inv(S) and wfs(S) and cont(S) and not final(S) implies cont(SS) or final(SS).
--> *********************************************************************************

module! ProofContCont {
  pr(PROOFfuns)
  pred contcont : State State Bool
  eq contcont(S:State,SS:State,CC:Bool)
     = not (S =(*,1)=>+ SS if CC suchThat
            not ((CC then
                  (inv(S) and cont(S) and not final(S)
     	           implies cont(SS) or final(SS))) == true)
     	   { S => SS !! CC ! inv(S) ! cont(S) ! final(S) ! cont(SS) ! final(SS) }) .
  pred conttest : State State Bool
  eq conttest(S:State,SS:State,CC:Bool)
     = (S =(*,1)=>+ SS if CC suchThat
            not ((CC then inv(S)) == true)
     	   { S => SS !! CC ! inv(S) }) .
}
